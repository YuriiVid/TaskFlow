name: tms
services:
  api:
    image: tms_api
    container_name: tms_api
    build:
      context: ./API
      dockerfile: .docker/api.Dockerfile
    ports:
      - 8000:80
      - 8001:443
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    develop:
      watch:
        - action: rebuild
          path: .
    env_file:
      - ./API/.config/api.env
    volumes:
      - ~/.aspnet/https:/https:ro
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
  migrate:
    image: tms_migrate
    container_name: tms_migrate
    build:
      context: ./API
      dockerfile: .docker/migrate.Dockerfile
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./API/.config/api.env
    restart: "no"

  db:
    container_name: tms_pg_db
    image: tms_pg_db
    restart: always
    build:
      context: ./API
      dockerfile: .docker/db.Dockerfile
    volumes:
      - db-data:/var/lib/postgresql/data:rw
    command: "postgres -c max_connections=150
          -c shared_buffers=512MB -c effective_cache_size=1536MB
          -c maintenance_work_mem=128MB -c checkpoint_completion_target=0.9 -c wal_buffers=16MB
          -c default_statistics_target=100 -c random_page_cost=1.1 -c effective_io_concurrency=200
          -c work_mem=3495kB -c min_wal_size=1GB -c max_wal_size=4GB -c max_worker_processes=2
          -c max_parallel_workers_per_gather=1 -c max_parallel_workers=2 -c max_parallel_maintenance_workers=1"
    env_file:
      - API/.config/db.env
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $$POSTGRES_DB -U $$POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
  front:
    image: tms_front
    container_name: tms_front
    build: 
      context: ./frontend
      dockerfile: front.Dockerfile
    depends_on:
       - api
    ports:
      - 5173:5173
    env_file:
      - ./frontend/.env
    stdin_open: true
    tty: true
    logging:
      driver: "json-file"
      options:
        max-size: "200k"  
        max-file: "10"
volumes:
  db-data:
